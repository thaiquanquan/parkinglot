/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parkinglot.gui;
import javax.swing.JOptionPane;
import parkinglot.service.UserService;
import parkinglot.core.User;
import parkinglot.core.ParkingLot;
import parkinglot.transaction.Transaction;
import java.util.ArrayList;

/**
 *
 * @author Maxsys
 */
public class LoginScreen extends javax.swing.JFrame {
     private UserService userService; // Khai báo đối tượng UserService
    private ParkingLot parkingLot;
    private ArrayList<Transaction> transactions;

    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() {
        initComponents();
          userService = new UserService(); // Khởi tạo UserService
        parkingLot = new ParkingLot(10); // Khởi tạo ParkingLot với 10 chỗ đậu xe
        transactions = new ArrayList<>(); // Khởi tạo danh sách giao dịch
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernameTextField)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addContainerGap(184, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(loginButton)
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(loginButton)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // Lấy username và password người dùng nhập vào
    String username = usernameTextField.getText();
    String password = new String(passwordField.getPassword());

    // Sử dụng UserService để kiểm tra thông tin đăng nhập
    User user = userService.login(username, password);

    if (user != null) {
        // Đăng nhập thành công, xác định vai trò và điều hướng
    if (user.getRole().equals("Admin") || user.getRole().equals("ParkingAttendant")) {
        // Nhân viên quản lý và quản trị viên đều được điều hướng đến AdminScreen
        JOptionPane.showMessageDialog(this, "Login Successful - Admin");
        AdminScreen adminScreen = new AdminScreen(parkingLot, transactions); // Khởi tạo AdminScreen
        adminScreen.setVisible(true);
    } else if (user.getRole().equals("User")) {
        // Người dùng thông thường thì điều hướng đến UserScreen
        JOptionPane.showMessageDialog(this, "Login Successful - User");
        
        // Khởi tạo AdminScreen trước khi truyền vào UserScreen
        AdminScreen adminScreen = new AdminScreen(parkingLot, transactions); 
        UserScreen userScreen = new UserScreen(parkingLot, transactions, adminScreen);
        userScreen.setVisible(true);
    }
    // Đóng màn hình đăng nhập sau khi đăng nhập thành công
        this.dispose();
    } else {
        // Đăng nhập thất bại
        JOptionPane.showMessageDialog(this, "Invalid Username or Password");
    }
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args){
       System.out.println("Starting application...");
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
